document.addEventListener('DOMContentLoaded', function () {
    const screen = document.getElementById('calculatorScreen');
    let currentInput = '';
    let operation = '';
    let firstOperand = '';

    // Attach event listeners to all buttons
    document.querySelectorAll('button').forEach(button => {
        button.addEventListener('click', function () {
            const value = this.textContent;
            handleInput(value);
            triggerButtonPressEffect(this);
        });
    });

    // Keyboard input handling
    document.addEventListener('keydown', function (event) {
        const keyMap = {
            'Escape': 'AC',    // Map 'Esc' key to 'AC'
            'Backspace': '←',  // Map 'Backspace' key to '←'
            'Enter': '=',      // Map 'Enter' key to '='
            '/': '/',
            '*': '*',
            '-': '-',
            '+': '+',
            '.': '.',
            '%': '%',
            '1': '1', '2': '2', '3': '3', '4': '4',
            '5': '5', '6': '6', '7': '7', '8': '8', '9': '9', '0': '0'
        };

        const key = event.key;
        if (keyMap[key]) {
            event.preventDefault(); // Prevent default behavior (like scrolling or form submission)
            const button = Array.from(document.querySelectorAll('button')).find(btn => btn.textContent === keyMap[key]);
            if (button) {
                handleInput(keyMap[key]);
                triggerButtonPressEffect(button);
            }
        }
    });

    function handleInput(value) {
        switch (value) {
            case 'AC':
                resetCalculator();
                break;
            case '←':
                if (currentInput.length > 0) {
                    currentInput = currentInput.slice(0, -1);
                    screen.value = currentInput || '0';
                }
                break;
            case '=':
                calculateResult();
                break;
            case '√':
                if (currentInput) {
                    currentInput = Math.sqrt(parseFloat(currentInput)).toString();
                    screen.value = currentInput;
                }
                break;
            case '%':
                if (currentInput) {
                    currentInput = (parseFloat(currentInput) / 100).toString();
                    screen.value = currentInput;
                }
                break;
            case '+':
            case '-':
            case '*':
            case '/':
                setOperation(value);
                break;
            case '.':
                if (!currentInput.includes('.')) {
                    currentInput += value;
                    screen.value = currentInput;
                }
                break;
            default: // Handling digit input
                if (currentInput === '0') {
                    currentInput = value;
                } else {
                    currentInput += value;
                }
                screen.value = currentInput;
                break;
        }
    }

    function setOperation(op) {
        if (!firstOperand || operation) {
            calculateResult();
        }
        firstOperand = currentInput;
        operation = op;
        currentInput = '';
    }

    function calculateResult() {
        if (firstOperand && operation && currentInput) {
            const firstNum = parseFloat(firstOperand);
            const secondNum = parseFloat(currentInput);
            switch (operation) {
                case '+':
                    currentInput = (firstNum + secondNum).toString();
                    break;
                case '-':
                    currentInput = (firstNum - secondNum).toString();
                    break;
                case '*':
                    currentInput = (firstNum * secondNum).toString();
                    break;
                case '/':
                    if (secondNum !== 0) {
                        currentInput = (firstNum / secondNum).toString();
                    } else {
                        currentInput = 'Error';
                    }
                    break;
            }
            screen.value = currentInput;
            firstOperand = '';
            operation = '';
        }
    }

    function resetCalculator() {
        currentInput = '';
        firstOperand = '';
        operation = '';
        screen.value = '0';
    }

    function triggerButtonPressEffect(button) {
        button.classList.add('pressed');
        setTimeout(() => button.classList.remove('pressed'), 100); // Remove the press effect after 100 ms
    }
});
